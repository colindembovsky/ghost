<?xml version="1.0" encoding="utf-8"?>
<post>
  <id>bc9e66d6-7521-4bd6-ba5b-a023b207414a</id>
  <title>Enable Custom IntelliTrace Web Events with a Right-Click</title>
  <slug>enable-custom-intellitrace-web-events-with-a-right-click</slug>
  <shortUrl>http://bit.ly/1koNsdK</shortUrl>
  <author>Colin Dembovsky</author>
  <pubDate>2013-04-12 08:15:00</pubDate>
  <lastModified>2020-04-06 07:49:38</lastModified>
  <content>&lt;p&gt;Series Links:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="http://www.colinsalmcorner.com/2013/06/intellitrace-tips-and-tricks-basics.html" target="_blank"&gt;Part 1&lt;/a&gt;: The Basics (this post) – also &lt;a href="http://blogs.msdn.com/b/southafrica/archive/2013/05/13/guest-post-intellitrace-tips-and-tricks-the-basics-part-1-colin-dembovsky.aspx" target="_blank"&gt;guest posted&lt;/a&gt; on MSDevDiv SA Blog&lt;/li&gt; &lt;li&gt;&lt;a href="http://www.colinsalmcorner.com/2013/06/intellitrace-tips-and-tricks.html" target="_blank"&gt;Part 2&lt;/a&gt;: IntelliTrace Everywhere – also &lt;a href="http://blogs.msdn.com/b/southafrica/archive/2013/05/13/guest-post-intellitrace-tips-and-tricks-intellitrace-everywhere-part-2-colin-dembovsky.aspx" target="_blank"&gt;guest posted&lt;/a&gt; on MSDevDiv SA Blog&lt;/li&gt; &lt;li&gt;&lt;a href="http://www.colinsalmcorner.com/2013/04/enable-custom-intellitrace-web-events.html" target="_blank"&gt;Part 3&lt;/a&gt;: Enable Custom IntelliTrace Events with a Right-Click&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Note: This is an unsupported feature!&lt;/strong&gt; Use at your own risk – though to be honest I can’t see what the risk really is. Just know that this is not supported by Microsoft.&lt;/p&gt; &lt;h2&gt;Preamble (TL;DR – skip to next section for the Good Stuff)&lt;/h2&gt; &lt;p&gt;I’m going to be presenting 3 deep dives at &lt;a href="http://www.teched.co.za/" target="_blank"&gt;TechEd Africa&lt;/a&gt; next week:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Version Control (&lt;a href="http://blogs.msdn.com/b/bharry/archive/2012/08/13/announcing-git-integration-with-tfs.aspx" target="_blank"&gt;including Git&lt;/a&gt;)  &lt;li&gt;&lt;a href="http://blogs.msdn.com/b/bharry/archive/2013/04/04/vs-tfs-2012-2-update-2-released-today.aspx" target="_blank"&gt;Agile Planning Tools&lt;/a&gt; and Customizations  &lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/vstudio/dd264915.aspx" target="_blank"&gt;IntelliTrace&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;While I was preparing for my IntelliTrace session, I was watching &lt;a href="http://continuouslyintegrating.blogspot.com/" target="_blank"&gt;Larry Guger&lt;/a&gt; (IntelliTrace PM) do a presentation when &lt;a href="http://msdn.microsoft.com/en-us/library/vstudio/hh398365.aspx" target="_blank"&gt;IntelliTrace-in-Production&lt;/a&gt; had just launched. Right at the end of his talk, he did something which boggled my mind – he right-clicked a method and right there in the context menu was “Insert IntelliTrace Event”. He did this for a couple of methods, and then exported these events to a folder. When he ran the IntelliTrace collector for IIS using PowerShell, the custom events were present in the log file.&lt;/p&gt; &lt;p&gt;&lt;a href="http://lh5.ggpht.com/-dvLBpOnAXds/UWemJ36qb5I/AAAAAAAAArM/uvPWeP3hZEQ/s1600-h/image%25255B3%25255D.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://lh4.ggpht.com/-tP5bj2cs4-k/UWemLeFP79I/AAAAAAAAArU/7zJG4RSFRoM/image_thumb%25255B1%25255D.png?imgmax=800" width="311" height="283"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This was amazing because I know how tedious it is to create custom IntelliTrace events. I quickly fired up my VS just to see if I could do it – and couldn’t find the menu option.&lt;/p&gt; &lt;p&gt;I then mailed Larry and after a short email conversation and some scratching around the IntelliTrace dll’s with Reflector, I was able to figure out that if you add a registry entry, you “unlock” this feature.&lt;/p&gt; &lt;p&gt;This is a “partially complete” feature in VS – here is the big limitation:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;This only works with IntelliTrace collection for IIS applications via PowerShell&lt;/strong&gt;.&lt;/p&gt; &lt;h2&gt;The Good Stuff&lt;/h2&gt; &lt;p&gt;So I’ll cut to the chase: here’s the registry key:&lt;/p&gt; &lt;p&gt;&lt;font face="Courier New"&gt;Windows Registry Editor Version 5.00&lt;/font&gt;&lt;/p&gt; &lt;p&gt;&lt;font face="Courier New"&gt;[HKEY_CURRENT_USER\Software\Microsoft\VisualStudio\11.0_Config\TraceDebugger]&lt;br&gt;"IntelliTraceEventsEnabled"=dword:00000001&lt;/font&gt;&lt;/p&gt; &lt;p&gt;Just copy and paste this into a file (intelli.reg or something) and double-click it. Restart VS.&lt;/p&gt; &lt;p&gt;Now open up a Web Application, find a method, right click, select “Insert IntelliTrace Event”. Repeat for a couple of other methods. You’ll see a glyph in the gutter indicating that you have an event for that method.&lt;/p&gt; &lt;p&gt;&lt;a href="http://lh4.ggpht.com/-CENUNMpO-cE/UWemMlMqYXI/AAAAAAAAArc/WyaWXJoAdLk/s1600-h/image%25255B7%25255D.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://lh4.ggpht.com/-DcRv07DyD5s/UWemNh-msOI/AAAAAAAAArk/cwTHy1vpNm0/image_thumb%25255B3%25255D.png?imgmax=800" width="443" height="116"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Now go to Debug-&gt;IntelliTrace-&gt;Export IntelliTrace Events. Save this file to a folder somewhere.&lt;/p&gt; &lt;p&gt;&lt;a href="http://lh4.ggpht.com/-EiEhnhRSQhU/UWemPGNY9iI/AAAAAAAAArs/6f6hZsPLM-g/s1600-h/image%25255B12%25255D.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://lh4.ggpht.com/-aKHozhN87bw/UWemRKDkOYI/AAAAAAAAAr0/f2mO0X2b_Co/image_thumb%25255B6%25255D.png?imgmax=800" width="365" height="340"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You’ll see that the file has an .iFragment extension – this is an IntelliTrace config fragment. If you open up the file, you’ll see it has created Category, Module and Diagnostic sections – these are the same sections you’d have to manually create if you wanted some custom IntelliTrace events.&lt;/p&gt; &lt;p&gt;&lt;a href="http://lh4.ggpht.com/-DhL5tFzpOrg/UWemR5PRDoI/AAAAAAAAAr8/Nd1IckmzTtk/s1600-h/image%25255B26%25255D.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://lh4.ggpht.com/-U-40H7ZwnqI/UWemTmhaNlI/AAAAAAAAAsE/7NMY9idTF4Q/image_thumb%25255B14%25255D.png?imgmax=800" width="494" height="204"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Aside:&lt;/strong&gt; You can see the “AutomaticDataQuery” element in the &lt;Binding&gt; tag. This allows you to see the in/out arguments of the method in the locals window when you debug the log file later… No messing around with argument positions and stuff…&lt;/p&gt; &lt;p&gt;&lt;a href="http://lh5.ggpht.com/-DxpfSF2FsRc/UWemUrhzS5I/AAAAAAAAAsM/IP7f3a3NdK0/s1600-h/image%25255B30%25255D.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://lh6.ggpht.com/-MAt8013SHKc/UWemWK4iY-I/AAAAAAAAAsU/qpFiVWhICdU/image_thumb%25255B16%25255D.png?imgmax=800" width="445" height="248"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Using iFragments&lt;/h2&gt; &lt;p&gt;Now that you have a custom iFragment, you need to go to the server that you want to collect IntelliTrace events from. Go to the folder where you extracted the collector and open (or create) a folder called &lt;strong&gt;CustomEvents&lt;/strong&gt;. This is where you drop your iFragments.&lt;/p&gt; &lt;p&gt;Now fire up your collector (using the default collection plan). Collect a log. Open it in VS. Start debugging.&lt;/p&gt; &lt;p&gt;The first thing to note is that you have a custom category in the categories list of the IntelliTrace events window:&lt;/p&gt; &lt;p&gt;&lt;a href="http://lh6.ggpht.com/-DjF5GKXphvk/UWemXeipbvI/AAAAAAAAAsc/FpGjwQJ20uA/s1600-h/image%25255B18%25255D.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://lh5.ggpht.com/-C7wqpOBQ_ho/UWemY_oC4kI/AAAAAAAAAsk/T8OIUaZcO_Y/image_thumb%25255B10%25255D.png?imgmax=800" width="317" height="349"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Secondly, you’ll see the events by the same glyph that you saw when you added the events in VS:&lt;/p&gt; &lt;p&gt;&lt;a href="http://lh3.ggpht.com/-t-R1fkao-sY/UWemaIzjMNI/AAAAAAAAAss/3NR52N_L2GE/s1600-h/image%25255B22%25255D.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://lh3.ggpht.com/-LP0JJZS-vMI/UWemcJkbMmI/AAAAAAAAAs0/lHKQKKfeltk/image_thumb%25255B12%25255D.png?imgmax=800" width="406" height="326"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Happy logging!&lt;/p&gt;  </content>
  <ispublished>true</ispublished>
  <categories>
    <category>news</category>
    <category>development</category>
  </categories>
  <comments>
    <comment isAdmin="false" isApproved="true" id="f576ace1-a1cb-41e0-848a-6f83328e295e">
      <author>Bombadil</author>
      <email>noreply@blogger.com</email>
      <website>http://www.blogger.com/profile/03271022167505684874</website>
      <ip></ip>
      <userAgent></userAgent>
      <date>2013-10-02 13:54:08</date>
      <content>Thanks for the post. Creating .iFragments files works also for console applications in the way you described. Now I just need to figure out where to leave those for normal applications.</content>
    </comment>
  </comments>
  <viewCount>5708</viewCount>
</post>