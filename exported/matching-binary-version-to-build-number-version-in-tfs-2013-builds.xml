<?xml version="1.0" encoding="utf-8"?>
<post>
  <id>c903c414-40a9-432f-b4d3-edfb544d425c</id>
  <title>Matching Binary Version to Build Number Version in TFS 2013 Builds</title>
  <slug>matching-binary-version-to-build-number-version-in-tfs-2013-builds</slug>
  <shortUrl>http://bit.ly/1fxVZ0s</shortUrl>
  <author>Colin Dembovsky</author>
  <pubDate>2014-10-22 01:40:02</pubDate>
  <lastModified>2020-04-06 08:11:52</lastModified>
  <content>&lt;p&gt;Jim Lamb wrote a &lt;a href="http://blogs.msdn.com/b/jimlamb/archive/2009/11/18/how-to-create-a-custom-workflow-activity-for-tfs-build-2010.aspx" target="_blank"&gt;post&lt;/a&gt; about how to use a custom activity to match the compiled versions of your assemblies to the TFS build number. This was not a trivial exercise (since you have to edit the workflow itself) but is the best solution for this sort of operation. Interestingly the post was written in November 2009 and updated for TFS 2010 RTM in February 2010.&lt;/p&gt; &lt;p&gt;I finally got a chance to play with a VM that’s got &lt;a href="http://www.microsoft.com/visualstudio/eng/2013-downloads" target="_blank"&gt;TFS 2013&lt;/a&gt; Preview installed. I was looking at the changes to the build engine. The Product Team have simplified the default template (they’ve collapsed a lot of granular activities into 5 or 6 larger activities). In fact, if you use the default build template, you won’t even see it (it’s not in the BuildProcessTemplates folder – you have to download it if you want to customize it).&lt;/p&gt; &lt;p&gt;The good news is that the team have added pre- and post-build and pre- and post-test script hooks into the default workflow. I instantly realised this could be used to solve the assembly-version-matches-build-number problem in a much easier manner.&lt;/p&gt; &lt;h2&gt;Using the Pre-Build Script&lt;/h2&gt; &lt;p&gt;The solution is to use a PowerShell script that can replace the version in the AssemblyInfo files before compiling with the version number in the build. Here’s the procedure:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Import the UpdateVersion.ps1 script into source control (the script is below)  &lt;li&gt;Change the build number format of your builds to produce something that contains a version number  &lt;li&gt;Point the pre-build script argument to the source control path of the script in step 1&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;The script itself is pretty simple – find all the matching files (AssemblyInfo.* by default) in a target folder (the source folder by default). Then extract the version number from the build number using a regex pattern, and do a regex replace on all the matching files.&lt;/p&gt; &lt;p&gt;If you’re using TFVC, the files are marked read-only when the build agent does a Get Latest, so I had to remove the read-only bit as well. The other trick was getting the source path and the build number – but you can use environment variables when executing any of the pre- or post- scripts (as detailed &lt;a href="http://msdn.microsoft.com/en-us/library/vstudio/dd647547(v=vs.120).aspx#scripts" target="_blank"&gt;here&lt;/a&gt;).&lt;/p&gt;&lt;pre class="brush: ps;"&gt;Param(
  [string]$pathToSearch = $env:TF_BUILD_SOURCESDIRECTORY,
  [string]$buildNumber = $env:TF_BUILD_BUILDNUMBER,
  [string]$searchFilter = "AssemblyInfo.*",
  [regex]$pattern = "\d+\.\d+\.\d+\.\d+"
)

try
{
    if ($buildNumber -match $pattern -ne $true) {
        Write-Host "Could not extract a version from [$buildNumber] using pattern [$pattern]"
        exit 1
    } else {
        $extractedBuildNumber = $Matches[0]
        Write-Host "Using version $extractedBuildNumber"

        gci -Path $pathToSearch -Filter $searchFilter -Recurse | %{
            Write-Host "  -&amp;gt; Changing $($_.FullName)" 
        
            # remove the read-only bit on the file
            sp $_.FullName IsReadOnly $false

            # run the regex replace
            (gc $_.FullName) | % { $_ -replace $pattern, $extractedBuildNumber } | sc $_.FullName
        }

        Write-Host "Done!"
    }
}
catch {
    Write-Host $_
    exit 1
}
&lt;/pre&gt;
&lt;p&gt;Save this &lt;a href="http://sdrv.ms/1bbZKWJ" target="_blank"&gt;script&lt;/a&gt; as “UpdateVersion.ps1” and put it into Source Control (I use a folder called $/Project/BuildProcessTemplates/CommonScripts to house all the scripts like this one for my Team Project).&lt;/p&gt;&lt;br&gt;
&lt;p&gt;&lt;a href="http://lh4.ggpht.com/-pBXCKbcpwtQ/Ue532irjf6I/AAAAAAAAA-k/UXknumZQf9g/s1600-h/image%25255B3%25255D.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://lh3.ggpht.com/-7FXKUl0DzNA/Ue533vEyvuI/AAAAAAAAA-s/J1MR-03AQ5Y/image_thumb%25255B1%25255D.png?imgmax=800" width="448" height="137"&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;
&lt;p&gt;The open your build and specify the source control path to the pre-build script (leave the arguments empty, since they’re all defaulted) and add a version number to your build number format. Don’t forget to add the script’s containing folder as a folder mapping in the Source Settings tab of your build.&lt;/p&gt;&lt;br&gt;
&lt;p&gt;&lt;a href="http://lh4.ggpht.com/-7VO2ED_AQM4/Ue534-SSWVI/AAAAAAAAA-0/cc_ZmHC4hu8/s1600-h/image%25255B7%25255D.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://lh6.ggpht.com/-WQFam_YQoo8/Ue535YZOfUI/AAAAAAAAA-8/58QHGMD0dY0/image_thumb%25255B3%25255D.png?imgmax=800" width="391" height="194"&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;
&lt;p&gt;&lt;a href="http://lh4.ggpht.com/-oAFMEiiaeCI/Ue536Ou5d6I/AAAAAAAAA_E/1adNWaDcj28/s1600-h/image%25255B11%25255D.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://lh6.ggpht.com/-ycoNgswTTeM/Ue536lSJTJI/AAAAAAAAA_M/zRdgbu0bNDQ/image_thumb%25255B5%25255D.png?imgmax=800" width="481" height="107"&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;
&lt;p&gt;Now you can run your build, and your assembly (and exe) versions will match the build number:&lt;/p&gt;&lt;br&gt;
&lt;p&gt;&lt;a href="http://lh4.ggpht.com/-fWNmnsSowyI/Ue537sUflYI/AAAAAAAAA_U/fF85Zqp6eDo/s1600-h/image%25255B15%25255D.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" border="0" alt="image" src="http://lh5.ggpht.com/-3MfeHizdJro/Ue5387D_kXI/AAAAAAAAA_c/WAq0aIxYQrI/image_thumb%25255B7%25255D.png?imgmax=800" width="441" height="297"&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;
&lt;p&gt;I’ve tested this script using TFVC as well as a TF Git repository, and both work perfectly.&lt;/p&gt;&lt;br&gt;
&lt;p&gt;Happy versioning!&lt;/p&gt;</content>
  <ispublished>true</ispublished>
  <categories>
    <category>teambuild</category>
  </categories>
  <comments>
    <comment isAdmin="false" isApproved="true" id="f888bf73-6a84-442d-9837-6ab508b09e42">
      <author>Rosco</author>
      <email>noreply@blogger.com</email>
      <website>http://www.blogger.com/profile/18146730103303883496</website>
      <ip></ip>
      <userAgent></userAgent>
      <date>2014-01-24 03:42:28</date>
      <content>What a wonderfully elegant solution to what has always been a pain in the neck. Thank you very much for sharing.</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="65827fc8-0aa6-41f9-80bf-bdba75a8d8cb">
      <author>Colin Dembovsky</author>
      <email>noreply@blogger.com</email>
      <website>http://www.blogger.com/profile/02577890234096457646</website>
      <ip></ip>
      <userAgent></userAgent>
      <date>2014-01-24 12:39:34</date>
      <content>No problem! Thanks for the feedback. Don't forget to get the latest version of the PS script (with error handling) here: http://www.colinsalmcorner.com/2014/01/error-handling-poor-mans-runscript-in.html</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="0f41f352-6572-49aa-9d04-c4007bc85759">
      <author>Joe Camp</author>
      <email>noreply@blogger.com</email>
      <website>http://www.blogger.com/profile/06960056464487200561</website>
      <ip></ip>
      <userAgent></userAgent>
      <date>2014-01-27 06:18:28</date>
      <content>This looks like a great approach.&lt;br /&gt;&lt;br /&gt;I'm using the hosted TFS Service and I've setup an Azure Continuous Deployment build.  This uses the AzureContinuousDeployment.11.xaml build process.  This template does not seem to have the pre-build script path parameter.  Neither does the DefaultTemplate.11.1.xaml.  I can see it if I select TfvcTemplate.12.xaml, however, then I lose my azure publishing.&lt;br /&gt;&lt;br /&gt;Do you know of a way to add this parameter to other build processes?</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="e4599a13-d0f7-475a-b1a6-7fd7295005b6">
      <author>Colin Dembovsky</author>
      <email>noreply@blogger.com</email>
      <website>http://www.blogger.com/profile/02577890234096457646</website>
      <ip></ip>
      <userAgent></userAgent>
      <date>2014-01-27 06:56:28</date>
      <content>Hey Joe&lt;br /&gt;&lt;br /&gt;You'll have to open the template (make a copy first) and insert a "RunScript" activity from the toolbox just before the "Build" activity. Then you create arguments on the workflow for the script path and script arguments, and wire those to the properties of the RunScript activity. Check this back into Source Control and set the script path and you should be good to go.&lt;br /&gt;&lt;br /&gt;You can read my post http://www.colinsalmcorner.com/2014/01/build-script-hooks-for-tfs-2012-builds.html about how to do this in a 2012 build template (although in 2012 you don't have the RunScript activity, so the 2013 modifications are much simpler).&lt;br /&gt;&lt;br /&gt;Hope that helps!</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="0359dd50-1512-4c61-a009-9ffa1b32ad23">
      <author>Neha</author>
      <email>neha.heights@gmail.com</email>
      <website></website>
      <ip>167.220.236.18</ip>
      <userAgent>Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36</userAgent>
      <date>2014-07-03 12:55:36</date>
      <content>Hi Colin,&lt;br /&gt;Am doing similar thing in TFS Git repository. I kept build templates and build related scripts in one project and my main project is different.&lt;br /&gt;My Source Settings has repo as project I want to build. In pre-build script path how can I give path to build scripts in another project.&lt;br /&gt;Both projects are in defaultcollection on TFS.&lt;br /&gt;Might be something trivial :-| but not getting it.&lt;br /&gt;&lt;br /&gt;Thanks and Regards&lt;br /&gt;Neha</content>
    </comment>
    <comment isAdmin="true" isApproved="true" id="58853ca4-366c-4bd9-87ef-5e4255d7b87f">
      <author>Colin Dembovsky</author>
      <email>colindembovsky@gmail.com</email>
      <website>http://www.colinsalmcorner.com/</website>
      <ip>105.226.39.169</ip>
      <userAgent>Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.143 Safari/537.36</userAgent>
      <date>2014-08-27 15:9:08</date>
      <content>@Neha&lt;br /&gt;&lt;br /&gt;You&amp;#39;ll have to commit the build scripts into each Git repo, since they don&amp;#39;t &amp;quot;know&amp;quot; about each other if they&amp;#39;re in different team projects, and the source settings only allow you to clone one repo (if I remember correctly). If you can map multiple repos, then just clone the &amp;quot;build script&amp;quot; repo with your &amp;quot;source&amp;quot; repo.</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="8483a652-d367-4436-971a-477e1d04da70">
      <author>Yves</author>
      <email>yv.vaillancourt@gmail.com</email>
      <website>http://yves-vaillancourt.blogspot.ca/</website>
      <ip>207.96.238.2</ip>
      <userAgent>Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36</userAgent>
      <date>2015-02-18 11:43:50</date>
      <content>Thanks!  It&amp;#39;s a clean and easy solution for TFS.</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="57846de0-6734-4a4f-80aa-3d6ff63bdf85">
      <author>Andreia</author>
      <email>andreia.otto@hotmail.com</email>
      <website></website>
      <ip>201.55.62.247</ip>
      <userAgent>Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; Touch; rv:11.0) like Gecko</userAgent>
      <date>2015-05-21 19:26:17</date>
      <content>Hey Colin,&lt;br /&gt;&lt;br /&gt;What about need to check out and check in assembly.cs files to change the number?&lt;br /&gt;&lt;br /&gt;Do you do it in this powershell?</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="6ce73feb-e817-4f92-a3ca-da48bbe59494">
      <author>Matt</author>
      <email>jmatt0806@gmail.com</email>
      <website></website>
      <ip>70.166.127.80</ip>
      <userAgent>Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.124 Safari/537.36</userAgent>
      <date>2015-06-14 05:50:42</date>
      <content>We are using the SharedAssemblyInfo Powershell script (https://gist.github.com/RichardSlater/ce86d5cf5b645a5b068a) to ensure all assembly versions are the same across a VS solution.&lt;br /&gt;&lt;br /&gt;How can we use the shared assembly info number as the build number?&lt;br /&gt;&lt;br /&gt;I believe in your example, you&amp;#39;re doing the opposite -- assigning a build number and then inserting into AssemblyInfo.cs file at compile-time.&lt;br /&gt;&lt;br /&gt;Thank you</content>
    </comment>
    <comment isAdmin="true" isApproved="true" id="0cb0fac9-a16a-4b80-9743-2fbdedad4e08">
      <author>Colin Dembovsky</author>
      <email>colindembovsky@gmail.com</email>
      <website>http://colinsalmcorner.com/</website>
      <ip>105.225.124.88</ip>
      <userAgent>Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; Touch; rv:11.0) like Gecko</userAgent>
      <date>2015-07-09 06:32:04</date>
      <content>@Andreia - I never check out/check in the assembly info files. The substitution works on each build, and each build is labelled, so I can tie the executable to the build and the build to the source used for that build. Therefore, there&amp;#39;s no reason to check out / check in the modification.</content>
    </comment>
    <comment isAdmin="true" isApproved="true" id="46389032-275c-4642-ad59-d2b3ee9394d8">
      <author>Colin Dembovsky</author>
      <email>colindembovsky@gmail.com</email>
      <website>http://colinsalmcorner.com/</website>
      <ip>105.225.124.88</ip>
      <userAgent>Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; Touch; rv:11.0) like Gecko</userAgent>
      <date>2015-07-09 06:38:12</date>
      <content>@Matt - the SharedAssemblyInfo script looks complicated. What we&amp;#39;ve done on some of our internal projects is remove the [assembly: AssemblyVersion(&amp;quot;1.0.0.0&amp;quot;)] and [assembly: AssemblyFileVersion(&amp;quot;1.0.0.0&amp;quot;)]&amp;quot; attributes from each AssemblyInfo.cs file in all the projects in a solution. We then add a solution-level file, SharedAssembly.cs and add it &amp;quot;as a link&amp;quot; to all the projects. Then our build script replaces the version numbers in this 1 file, and all the projects reference it, making all the projects end up with the common (build-generated) version number.&lt;br /&gt;&lt;br /&gt;Of course you could still use the SharedAssemblyInfo script - I would just change it to take $env.TF_Build_BuildNumber as the version number. Then you can execute it pre-build and you&amp;#39;d be done!</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="153bc667-eb79-49f8-b1ab-4c39697731d6">
      <author>Michal</author>
      <email>michalj.test@outlook.com</email>
      <website></website>
      <ip>88.103.163.149</ip>
      <userAgent>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.116 Safari/537.36</userAgent>
      <date>2016-02-25 09:36:49</date>
      <content>Is there a way how i can get a Build Source Version instead of Build Number Version into my AssemblyVersion?</content>
    </comment>
    <comment isAdmin="true" isApproved="true" id="659262cf-63aa-4355-92aa-a02031324f80">
      <author>Colin Dembovsky</author>
      <email>colindembovsky@gmail.com</email>
      <website>http://colinsalmcorner.com/</website>
      <ip>105.227.13.133</ip>
      <userAgent>Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; Touch; rv:11.0) like Gecko</userAgent>
      <date>2016-03-31 17:36:27</date>
      <content>@Michal - you can override the buildNumber param and pass in $(build.commitId) which will be the Git commit (for Git repos) or the checkin ID (for TFVC repos) if I remember correctly.</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="82f2529c-a16a-4d9e-a9d8-b30e18458078">
      <author>Heidi Housten</author>
      <email>housten@hotmail.com</email>
      <website></website>
      <ip>194.114.240.51</ip>
      <userAgent>Mozilla/5.0 (Windows NT 6.3; Win64; x64; Trident/7.0; rv:11.0) like Gecko</userAgent>
      <date>2016-04-12 08:11:07</date>
      <content>Perfect little script; exactly what I needed for VS2015 builds we are migrating to.&lt;br /&gt;Thank you!</content>
    </comment>
    <comment isAdmin="true" isApproved="true" id="83027de2-854a-42ae-8857-871e6760819e">
      <author>Colin Dembovsky</author>
      <email>colindembovsky@gmail.com</email>
      <website>http://colinsalmcorner.com/</website>
      <ip>105.226.82.167</ip>
      <userAgent>Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36</userAgent>
      <date>2016-04-14 13:19:44</date>
      <content>Hi @Heidi&lt;br /&gt;&lt;br /&gt;If you&amp;#39;re going to 2015 builds, then rather use my VersionAssemblies task from my extension: https://marketplace.visualstudio.com/items?itemName=colinsalmcorner.colinsalmcorner-buildtasks</content>
    </comment>
  </comments>
  <viewCount>40296</viewCount>
</post>